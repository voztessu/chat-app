is().'],
  [/->Is(Object|String|Int32|Number)\(\)/g, '.Is$1()'],
  [/info.GetReturnValue\(\).SetUndefined\(\)/g, 'return env.Undefined()'],
  [/info\.GetReturnValue\(\)\.Set\(((\n|.)+?)\);/g, 'return $1;'],

  // ex. Local<Value> to Napi::Value
  [/v8::Local<v8::(Value|Boolean|String|Number|Object|Array|Symbol|External|Function)>/g, 'Napi::$1'],
  [/Local<(Value|Boolean|String|Number|Object|Array|Symbol|External|Function)>/g, 'Napi::$1'],

  // Declare an env in helper functions that take a Napi::Value
  [/(\w+)\(Napi::Value (\w+)(,\s*[^()]+)?\)\s*{\n*([ ]*)/gm, '$1(Napi::Value $2$3) {\n$4Napi::Env env = $2.Env();\n$4'],

  // delete #include <node.h> and/or <v8.h>
  [/#include +(<|")(?:node|nan).h("|>)/g, '#include $1napi.h$2\n#include $1uv.h$2'],
  // NODE_MODULE to NODE_API_MODULE
  [/NODE_MODULE/g, 'NODE_API_MODULE'],
  [/Nan::/g, 'Napi::'],
  [